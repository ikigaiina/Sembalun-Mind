{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow",
      "Bash(npx claude-flow@alpha swarm init:*)",
      "Bash(npx:*)",
      "Bash(npm run build:analyze:*)",
      "Bash(npm run build:fast:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(mv:*)",
      "Bash(npm run lint:*)",
      "Bash(claude mcp list)",
      "Bash(claude mcp:*)",
      "Bash(rm:*)",
      "Bash(node:*)",
      "Bash(del:*)",
      "Bash(chmod:*)",
      "Bash(ls:*)",
      "Bash(npm run clean:*)",
      "Bash(timeout 60 npm run build:fast)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(vite build:*)",
      "Bash(npm run preview:*)",
      "Bash(timeout 60 npm run build:deploy)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(touch:*)",
      "Bash(start test-simple.html)",
      "Bash(start:*)",
      "Bash(copy fauzan-clean.html fauzan-developer-bridge.html)",
      "Bash(timeout 60 npm run build)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(npm audit:*)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(tsx:*)",
      "Bash(timeout 30 npm run lint)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(npm create:*)",
      "Bash(timeout 90 npm run build)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(timeout 60 npm run typecheck)",
      "Bash(npm run open:stats:*)",
      "Bash(npm run analyze:fast:*)",
      "Bash(npm update:*)",
      "Bash(git restore:*)",
      "Bash(timeout 15 npm run dev)",
      "Bash(timeout 30 npm run typecheck)",
      "Bash(npm --version)",
      "Bash(timeout 300 npm run build)",
      "Bash(timeout 30 npm run preview)",
      "Bash(timeout 120 npm run build:fast)",
      "Bash(vercel:*)",
      "Bash(timeout 120 npm run build)",
      "Bash(git merge:*)",
      "Bash(git push:*)",
      "Bash(npm run:*)",
      "Bash(gh auth:*)",
      "Bash(winget install:*)",
      "Bash(gh repo view:*)",
      "Bash(gh secret:*)",
      "Bash(gh api:*)",
      "Bash(where gh)",
      "Bash(refreshenv)",
      "Bash(gh:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" --version)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth status)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" auth login --web --scopes write:packages,read:packages,repo,workflow)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" repo view)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret list)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/main/protection --method PUT --raw-field required_status_checks='{\"\"strict\"\":true,\"\"contexts\"\":[\"\"build\"\",\"\"test\"\",\"\"lint\"\",\"\"accessibility\"\",\"\"performance\"\"]}' --raw-field enforce_admins=true --raw-field required_pull_request_reviews='{\"\"required_approving_review_count\"\":1,\"\"dismiss_stale_reviews\"\":true,\"\"require_code_owner_reviews\"\":false}' --raw-field restrictions=null)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/development_main/protection --method PUT --raw-field required_status_checks='{\"\"strict\"\":true,\"\"contexts\"\":[\"\"build\"\",\"\"test\"\",\"\"lint\"\"]}' --raw-field enforce_admins=false --raw-field required_pull_request_reviews='{\"\"required_approving_review_count\"\":1,\"\"dismiss_stale_reviews\"\":true,\"\"require_code_owner_reviews\"\":false}' --raw-field restrictions=null)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/production --method PUT --raw-field wait_timer=0 --raw-field reviewers='[]' --raw-field deployment_branch_policy='{\"\"protected_branches\"\":true,\"\"custom_branch_policies\"\":false}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/staging --method PUT --raw-field wait_timer=0 --raw-field reviewers='[]' --raw-field deployment_branch_policy='{\"\"protected_branches\"\":false,\"\"custom_branch_policies\"\":true}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üêõ bug\" --color \"d73a49\" --description \"Something isn''t working\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"‚ú® enhancement\" --color \"a2eeef\" --description \"New feature or request\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üèõÔ∏è cultural\" --color \"f9ca24\" --description \"Indonesian cultural integration\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"‚ôø accessibility\" --color \"0e8a16\" --description \"WCAG 2.1 AA compliance\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üì± mobile\" --color \"ff6b6b\" --description \"Mobile optimization\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üöÄ performance\" --color \"1dd1a1\" --description \"Performance optimization\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/main/protection --method PUT --field required_status_checks='{\\\"\"strict\\\"\":true,\\\"\"contexts\\\"\":[\\\"\"CI / build\\\"\",\\\"\"CI / test\\\"\",\\\"\"CI / lint\\\"\"]}' --field enforce_admins=true --field required_pull_request_reviews='{\\\"\"required_approving_review_count\\\"\":1,\\\"\"dismiss_stale_reviews\\\"\":true}' --raw-field restrictions=null)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/development_main/protection --method PUT --field required_status_checks='{\\\"\"strict\\\"\":false,\\\"\"contexts\\\"\":[]}' --field enforce_admins=false --field required_pull_request_reviews='{\\\"\"required_approving_review_count\\\"\":1}' --raw-field restrictions=null)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/production --method PUT --field wait_timer=0 --field reviewers='[]' --field deployment_branch_policy='{\\\"\"protected_branches\\\"\":true,\\\"\"custom_branch_policies\\\"\":false}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/staging --method PUT --field wait_timer=0 --field reviewers='[]' --field deployment_branch_policy='{\\\"\"protected_branches\\\"\":false,\\\"\"custom_branch_policies\\\"\":false}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üîí security\" --color \"b60205\" --description \"Security vulnerability or fix\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üìö documentation\" --color \"0075ca\" --description \"Improvements or additions to documentation\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üéØ priority-high\" --color \"d93f0b\" --description \"High priority issue\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label create \"üîÑ ci/cd\" --color \"5319e7\" --description \"Continuous integration and deployment\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/main/protection --method PUT --input branch-protection-main.json)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/branches/development_main/protection --method PUT --input branch-protection-dev.json)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/production --method PUT --input environment-production.json)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/environments/staging --method PUT --input environment-staging.json)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" repo set-default ikigaiina/sembalun)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" repo edit --enable-issues --enable-projects --enable-wiki)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set VITE_SUPABASE_URL --body \"https://your-supabase-url.supabase.co\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set VITE_SUPABASE_ANON_KEY --body \"your-supabase-anon-key\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set VERCEL_TOKEN --body \"your-vercel-token\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set VERCEL_ORG_ID --body \"your-vercel-org-id\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set VERCEL_PROJECT_ID --body \"your-vercel-project-id\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" secret set CULTURAL_EXPERT_API_KEY --body \"your-cultural-expert-api-key\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" run list --limit 5)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun --method PATCH --field has_pages=true --field homepage=\"https://ikigaiina.github.io/sembalun\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" run view --log)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api repos/ikigaiina/sembalun/pages --method POST --field source='{\\\"\"branch\\\"\":\\\"\"main\\\"\",\\\"\"path\\\"\":\\\"\"/docs\\\"\"}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" run list --limit 1)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" repo view --json nameWithOwner,url,isPrivate,hasIssues,hasProjects,hasWiki,hasPages)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" label list)"
    ],
    "deny": []
  }
}