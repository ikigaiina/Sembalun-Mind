rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }
    
    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    
    function isValidUid(uid) {
      return uid.matches('^[a-zA-Z0-9]{28}$') || uid.matches('^[a-zA-Z0-9-_]{1,128}$');
    }
    
    function isValidImageFile() {
      return resource.contentType.matches('image/.*') &&
             resource.size < 5 * 1024 * 1024; // 5MB limit
    }
    
    function isValidAudioFile() {
      return resource.contentType.matches('audio/.*') &&
             resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    // User profile pictures
    match /users/{uid}/profile/{fileName} {
      allow read: if true; // Profile pictures are public
      allow write: if isAuthenticated() && 
                   isOwner(uid) && 
                   isValidUid(uid) &&
                   isValidImageFile();
      allow delete: if isAuthenticated() && isOwner(uid) && isValidUid(uid);
    }
    
    // User's private meditation recordings or notes
    match /users/{uid}/recordings/{fileName} {
      allow read, write: if isAuthenticated() && isOwner(uid) && isValidUid(uid) && isValidAudioFile();
      allow delete: if isAuthenticated() && isOwner(uid) && isValidUid(uid);
    }
    
    // User's journal images or attachments
    match /users/{uid}/journal/{fileName} {
      allow read, write: if isAuthenticated() && 
                         isOwner(uid) && 
                         isValidUid(uid) &&
                         isValidImageFile();
      allow delete: if isAuthenticated() && isOwner(uid) && isValidUid(uid);
    }
    
    // Public meditation content (admin uploaded)
    match /content/meditations/{fileName} {
      allow read: if true; // Public content
      allow write: if false; // Admin only via server SDK
    }
    
    // Public program assets
    match /content/programs/{fileName} {
      allow read: if true; // Public content
      allow write: if false; // Admin only
    }
    
    // Public background sounds and music
    match /content/audio/{fileName} {
      allow read: if true; // Public audio content
      allow write: if false; // Admin only
    }
    
    // Public images and assets
    match /content/images/{fileName} {
      allow read: if true; // Public images
      allow write: if false; // Admin only
    }
    
    // App assets and static content
    match /assets/{fileName} {
      allow read: if true; // Public assets
      allow write: if false; // Admin only
    }
    
    // Temporary uploads (for processing)
    match /temp/{uid}/{fileName} {
      allow read, write: if isAuthenticated() && 
                         isOwner(uid) &&
                         isValidUid(uid) &&
                         (isValidImageFile() || isValidAudioFile());
      // Temp files should be cleaned up by cloud functions
    }
    
    // Analytics and crash reports (anonymous)
    match /analytics/{fileName} {
      allow write: if isAuthenticated(); // Users can upload crash reports
      allow read: if false; // No direct read access
    }
    
    // Deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}